<%- contentFor('style') %>
<style>
    .product-page {
        padding: 30px 15px;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        margin-bottom: 25px;
    }

    .page-header h1 {
        font-size: 2rem;
        font-weight: 600;
    }

    .search-filter-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 10px;
        margin-bottom: 20px;
    }

    .search-bar input {
        width: 250px;
        padding: 8px 12px;
        border: 1px solid #ddd;
        border-radius: 6px;
        outline: none;
        transition: 0.2s;
    }

    .search-bar input:focus {
        border-color: #0d6efd;
    }

    .filter select {
        padding: 8px 12px;
        border-radius: 6px;
        border: 1px solid #ddd;
        cursor: pointer;
    }

    .product-card {
        transition: transform 0.2s ease-in-out;
        display: flex;
        flex-direction: column;
        height: 100%;
    }

    .product-card:hover {
        transform: scale(1.05);
    }

    .product-image {
        height: 200px;
        object-fit: contain;
        margin-bottom: 15px;
        border-radius: 6px;
        border: 1px solid #ddd;
    }

    .card-body {
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
        text-align: center;
    }

    .btn-success {
        width: 100%;
    }

    .empty-state {
        text-align: center;
        padding: 50px 0;
        color: #888;
        font-size: 1rem;
    }

    .pagination {
        margin-top: 20px;
        display: flex;
        justify-content: center;
        gap: 5px;
    }

    .pagination button {
        padding: 6px 12px;
        border: 1px solid #ddd;
        background: white;
        border-radius: 5px;
        cursor: pointer;
        transition: 0.2s;
    }

    .pagination button.active {
        background-color: #0d6efd;
        color: white;
        border-color: #0d6efd;
    }

    .pagination button:hover {
        background-color: #e9ecef;
    }
</style>

<%- contentFor('body') %>
<div class="product-page container py-4">
    <div class="page-header">
        <h1><%= pageTitle %></h1>
        <a href="/cart-list" class="nav-link position-relative d-inline-block">
            <i class="fa-solid fa-cart-shopping"></i>
            <span class="ms-1">Cart</span>
            <span class="badge bg-danger rounded-pill position-absolute top-0 start-100 translate-middle">
                0
            </span>
        </a>
    </div>

    <div class="search-filter-bar">
        <div class="search-bar">
            <input type="text" id="searchInput" placeholder="Search products..." onkeyup="applyFilters()">
        </div>

        <div class="filter">
            <select id="categoryFilter" onchange="applyFilters()">
                <option value="all">All Categories</option>
                <% const uniqueCategories = [...new Set(products.map(p => p.category))];
                   uniqueCategories.forEach(category => { %>
                    <option value="<%= category %>"><%= category %></option>
                <% }) %>
            </select>
        </div>
    </div>

    <div class="row" id="productContainer">
        <% products.forEach(product => { %>
            <div class="col-md-4 mb-4 product-item" data-category="<%= product.category %>">
                <div class="card product-card shadow-sm w-100">
                    <img src="<%= product.imageUrl || '/uploads/no-image.png' %>" 
                         alt="<%= product.name %>" 
                         class="card-img-top product-image">
                    <div class="card-body">
                        <div>
                            <h5 class="card-title"><%= product.name %></h5>
                            <p class="text-muted"><%= product.brand %> | <%= product.category %></p>
                            <h6 class="text-primary">$<%= product.price %></h6>
                        </div>
                        <form action="/cart/add/<%= product._id %>" method="POST">
                            <button class="btn btn-success">
                                <i class="fa-solid fa-cart-plus me-2"></i> Add to Cart
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        <% }) %>
    </div>

    <div class="empty-state" id="noItemsFound" style="display: none;">
        <p>No products found.</p>
    </div>

    <div class="pagination" id="pagination"></div>
</div>

<script>
    const rowsPerPage = 6; // client-side grid, fewer per page
    let currentPage = 1;

    function applyFilters() {
        const searchInput = document.getElementById('searchInput').value.toLowerCase();
        const selectedCategory = document.getElementById('categoryFilter').value;
        const items = Array.from(document.querySelectorAll('.product-item'));

        const filteredItems = items.filter(item => {
            const name = item.querySelector('.card-title').textContent.toLowerCase();
            const brandCat = item.querySelector('.text-muted').textContent.toLowerCase();
            const category = item.getAttribute('data-category');
            const matchesText = name.includes(searchInput) || brandCat.includes(searchInput);
            const matchesCategory = selectedCategory === 'all' || category === selectedCategory;
            return matchesText && matchesCategory;
        });

        items.forEach(i => i.style.display = 'none');

        if (filteredItems.length === 0) {
            document.getElementById('noItemsFound').style.display = 'block';
            document.getElementById('pagination').innerHTML = '';
        } else {
            document.getElementById('noItemsFound').style.display = 'none';
            paginateItems(filteredItems);
        }
    }

    function paginateItems(filteredItems) {
        const totalPages = Math.ceil(filteredItems.length / rowsPerPage);
        if (currentPage > totalPages) currentPage = 1;

        filteredItems.forEach((item, index) => {
            item.style.display = (index >= (currentPage - 1) * rowsPerPage && index < currentPage * rowsPerPage) ? '' : 'none';
        });

        const paginationEl = document.getElementById('pagination');
        paginationEl.innerHTML = '';
        for (let i = 1; i <= totalPages; i++) {
            const btn = document.createElement('button');
            btn.textContent = i;
            btn.classList.toggle('active', i === currentPage);
            btn.onclick = () => {
                currentPage = i;
                paginateItems(filteredItems);
            };
            paginationEl.appendChild(btn);
        }
    }

    applyFilters();
</script>
