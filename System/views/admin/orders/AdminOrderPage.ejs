<%- contentFor('style') %>
<style>
  .orders-page {
    padding: 30px;
  }

  .page-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 25px;
  }

  .mode-toggle {
    display: flex;
    align-items: center;
    gap: 10px;
  }

  .cashier-mode {
    display: none;
  }

  /* === POS UI === */
  .pos-container {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 25px;
  }

  .product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 15px;
  }

  .product-card {
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    padding: 15px;
    background-color: #fff;
    text-align: center;
    cursor: pointer;
    transition: transform 0.2s ease;
  }

  .product-card:hover {
    transform: scale(1.05);
    background-color: #f8fafc;
  }

  .product-card img {
    width: 80px;
    height: 80px;
    object-fit: contain;
    margin-bottom: 10px;
  }

  .checkout-panel {
    border-radius: 12px;
    box-shadow: 0 3px 12px rgba(0,0,0,0.1);
    padding: 20px;
    background: #fff;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .cart-item {
    display: flex;
    justify-content: space-between;
    margin-bottom: 10px;
    font-size: 0.95rem;
  }

  .total-section {
    border-top: 1px solid #ccc;
    margin-top: 15px;
    padding-top: 10px;
  }

  .checkout-btn {
    margin-top: 15px;
    width: 100%;
  }
</style>

<%- contentFor('body') %>
<div class="orders-page container">
  <div class="page-header">
    <h2>Orders Management</h2>
    <div class="mode-toggle">
      <label class="form-check-label fw-bold me-2">Cashier Mode</label>
      <input type="checkbox" id="toggleMode" class="form-check-input">
    </div>
  </div>

  <!-- 🧍 Customer Orders Mode -->
  <div class="customer-orders">
    <div class="card p-4 shadow">
      <h4>Customer Orders</h4>
      <table class="table table-hover mt-3">
        <thead class="table-light">
          <tr>
            <th>#</th>
            <th>Customer</th>
            <th>Item</th>
            <th>Qty</th>
            <th>Total</th>
            <th>Status</th>
          </tr>
        </thead>
        <tbody>
          <% orders.forEach((order, index) => { %>
          <tr>
            <td><%= index + 1 %></td>
            <td><%= order.customerName %></td>
            <td><%= order.item %></td>
            <td><%= order.quantity %></td>
            <td>$<%= order.total %></td>
            <td><span class="badge bg-success"><%= order.status %></span></td>
          </tr>
          <% }) %>
        </tbody>
      </table>
      <a href="/orders/history" class="text-primary">View Order History →</a>
    </div>
  </div>

  <!-- 💰 Cashier Mode -->
  <div class="cashier-mode">
    <div class="pos-container">
      <!-- Left: Product Grid -->
      <div class="product-grid">
        <% products.forEach(product => { %>
          <div class="product-card" onclick="addToCart('<%= product.name %>', <%= product.price %>)">
            <img src="<%= product.imageUrl %>" alt="<%= product.name %>">
            <h6><%= product.name %></h6>
            <p class="text-muted">$<%= product.price %></p>
          </div>
        <% }) %>
      </div>

      <!-- Right: Checkout Panel -->
      <div class="checkout-panel">
        <div>
          <h5>Cart Summary</h5>
          <div id="cartItems" class="mt-3"></div>
        </div>
        <div class="total-section">
          <h6>Total: $<span id="totalAmount">0</span></h6>
          <button class="btn btn-success checkout-btn" onclick="checkout()">Checkout</button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  const toggleMode = document.getElementById('toggleMode');
  const customerOrders = document.querySelector('.customer-orders');
  const cashierMode = document.querySelector('.cashier-mode');
  const cartItemsDiv = document.getElementById('cartItems');
  const totalAmountEl = document.getElementById('totalAmount');

  let cart = [];

  toggleMode.addEventListener('change', () => {
    if (toggleMode.checked) {
      Swal.fire({
        title: 'Cashier Mode Enabled',
        text: 'You are now in POS interface',
        icon: 'info',
        timer: 1500,
        showConfirmButton: false
      });
      customerOrders.style.display = 'none';
      cashierMode.style.display = 'block';
    } else {
      customerOrders.style.display = 'block';
      cashierMode.style.display = 'none';
    }
  });

  function addToCart(name, price) {
    const existing = cart.find(item => item.name === name);
    if (existing) {
      existing.qty++;
    } else {
      cart.push({ name, price, qty: 1 });
    }
    renderCart();
  }

  function renderCart() {
    cartItemsDiv.innerHTML = '';
    let total = 0;

    cart.forEach(item => {
      const itemTotal = item.qty * item.price;
      total += itemTotal;

      const div = document.createElement('div');
      div.className = 'cart-item';
      div.innerHTML = `
        <span>${item.name} x${item.qty}</span>
        <span>$${itemTotal.toFixed(2)}</span>
      `;
      cartItemsDiv.appendChild(div);
    });

    totalAmountEl.textContent = total.toFixed(2);
  }

  function checkout() {
    if (cart.length === 0) {
      Swal.fire('Cart Empty', 'Please add some products first!', 'warning');
      return;
    }
    Swal.fire({
      title: 'Checkout Successful!',
      text: 'Order has been placed successfully.',
      icon: 'success',
      timer: 1800,
      showConfirmButton: false
    });
    cart = [];
    renderCart();
  }
</script>
