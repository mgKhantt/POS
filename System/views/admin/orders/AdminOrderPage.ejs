<%- contentFor('style') %>
  <style>
    .order-footer>.orders-page {
      padding: 30px;
    }

    .page-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
      margin-bottom: 25px;
    }

    .page-header h2 {
      margin-bottom: 10px;
    }

    .filter-bar {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      margin-bottom: 25px;
    }

    .filter-bar input,
    .filter-bar select {
      padding: 8px 14px;
      border-radius: 8px;
      border: 1px solid #ddd;
      font-size: 0.95rem;
      outline: none;
      min-width: 150px;
    }

    .order-card {
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
      background-color: #fff;
      padding: 15px 20px;
      margin-bottom: 15px;
      transition: 0.3s;
    }

    .order-card:hover {
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
    }

    .order-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      cursor: pointer;
      font-weight: 500;
      margin-bottom: 8px;
    }

    .status-badge-header {
      padding: 3px 10px;
      border-radius: 12px;
      font-size: 0.75rem;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .status-Completed {
      background-color: #28a745;
      color: #fff;
    }

    .status-Pending {
      background-color: #ffc107;
      color: #212529;
    }

    .status-Cancelled {
      background-color: #dc3545;
      color: #fff;
    }

    .order-body {
      font-size: 0.9rem;
      border-top: 1px dashed #ddd;
      padding-top: 8px;
      display: none;
    }

    .order-item {
      display: flex;
      justify-content: space-between;
      padding: 4px 0;
    }

    .order-footer {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 10px;
      flex-wrap: wrap;
    }

    .order-footer .total {
      font-weight: 600;
    }

    .btn-action {
      padding: 6px 12px;
      border-radius: 6px;
      font-size: 0.85rem;
      margin-left: 5px;
      cursor: pointer;
      border: none;
      transition: 0.2s;
    }

    .btn-view {
      background-color: #007bff;
      color: #fff;
    }

    .btn-edit {
      background-color: #ffc107;
      color: #212529;
    }

    .btn-delete {
      background-color: #dc3545;
      color: #fff;
    }

    .btn-action:hover {
      opacity: 0.85;
    }

    @media (max-width: 768px) {
      .page-header {
        flex-direction: column;
        align-items: flex-start;
      }

      .filter-bar {
        flex-direction: column;
        gap: 10px;
      }
    }

    .order-footer {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 10px;
      flex-wrap: wrap;
      gap: 5px;
    }

    .order-actions {
      display: flex;
      gap: 5px;
    }

    .btn-action {
      padding: 5px 10px;
      border-radius: 6px;
      font-size: 0.8rem;
      cursor: pointer;
      border: none;
      transition: 0.2s;
    }

    .btn-view {
      background-color: #007bff;
      color: #fff;
    }

    .btn-edit {
      background-color: #ffc107;
      color: #212529;
    }

    .btn-delete {
      background-color: #dc3545;
      color: #fff;
    }

    .btn-action:hover {
      opacity: 0.85;
    }
  </style>

  <%- contentFor('body') %>
    <div class="orders-page container">
      <div class="page-header">
        <h2>Customer Orders</h2>
        <a href="/admin/cashier" class="btn btn-success">Go to Cashier Mode</a>
      </div>

      <!-- Filter Bar -->
      <div class="filter-bar">
        <input type="text" id="searchCustomer" placeholder="Search by customer or cashier" onkeyup="filterOrders()">
        <select id="statusFilter" onchange="filterOrders()">
          <option value="">All Status</option>
          <option value="Pending">Pending</option>
          <option value="Completed">Completed</option>
          <option value="Cancelled">Cancelled</option>
        </select>
        <select id="timeFilter" onchange="filterOrders()">
          <option value="">All Time</option>
          <option value="today">Today</option>
          <option value="yesterday">Yesterday</option>
          <option value="last7">Last 7 Days</option>
          <option value="last30">Last 30 Days</option>
          <option value="last365">Last 365 Days</option>
        </select>
      </div>

      <!-- Orders Container -->
      <div id="ordersContainer">
        <% orders.forEach((order, index)=> { %>
          <div class="order-card order" data-status="<%= order.status %>" data-date="<%= order.date.toISOString() %>"
            data-cashier="<%= order.cashier ? order.cashier.name : '' %>">

            <div class="order-header" onclick="toggleItems(<%= index %>)">
              <div>
                <strong>
                  <%= order.customerName %>
                </strong> -
                <span class="status-badge-header status-<%= order.status %>">
                  <%= order.status %>
                </span>
              </div>
              <div>Cashier: <%= order.cashier ? order.cashier.name : 'N/A' %>
              </div>
            </div>

            <div class="order-body" id="orderItems-<%= index %>">
              <% order.items.forEach(item=> { %>
                <div class="order-item">
                  <span>
                    <%= item.name %> x <%= item.qty %>
                  </span>
                  <span>$<%= item.price %></span>
                </div>
                <% }) %>

                  <div class="order-footer">
                    <div class="total">Total: $<%= order.total %>
                    </div>
                    <div class="order-actions">
                      <button class="btn-action btn-view" onclick="viewOrder('<%= order._id %>')">View</button>
                      <button class="btn-action btn-edit" onclick="editOrder('<%= order._id %>')">Edit</button>
                      <button class="btn-action btn-delete" onclick="deleteOrder('<%= order._id %>')">Delete</button>
                    </div>
                  </div>
            </div>
          </div>
          <% }) %>
      </div>
    </div>

    <script>
      function toggleItems(index) {
        const itemsDiv = document.getElementById(`orderItems-${index}`);
        const orderCard = itemsDiv.parentElement;
        if (itemsDiv.style.display === 'block') {
          itemsDiv.style.display = 'none';
          orderCard.classList.remove('expanded');
        } else {
          itemsDiv.style.display = 'block';
          orderCard.classList.add('expanded');
        }
      }

      function filterOrders() {
        const searchTerm = document.getElementById('searchCustomer').value.toLowerCase();
        const statusFilter = document.getElementById('statusFilter').value;
        const timeFilter = document.getElementById('timeFilter').value;

        const orders = document.querySelectorAll('#ordersContainer .order');
        const now = new Date();
        const startOfToday = new Date(now.getFullYear(), now.getMonth(), now.getDate());

        orders.forEach(order => {
          const customerName = order.querySelector('.order-header div').innerText.toLowerCase();
          const cashierName = order.dataset.cashier.toLowerCase();
          const status = order.dataset.status;
          const orderDate = new Date(order.dataset.date);

          let show = true;

          if (searchTerm && !customerName.includes(searchTerm) && !cashierName.includes(searchTerm)) show = false;
          if (statusFilter && status !== statusFilter) show = false;

          const diffDays = (startOfToday - new Date(orderDate.getFullYear(), orderDate.getMonth(), orderDate.getDate())) / (1000 * 60 * 60 * 24);
          if (timeFilter === 'today' && diffDays !== 0) show = false;
          if (timeFilter === 'yesterday' && diffDays !== 1) show = false;
          if (timeFilter === 'last7' && (diffDays < 0 || diffDays > 6)) show = false;
          if (timeFilter === 'last30' && (diffDays < 0 || diffDays > 29)) show = false;
          if (timeFilter === 'last365' && (diffDays < 0 || diffDays > 364)) show = false;

          order.style.display = show ? 'block' : 'none';
        });
      }

      function viewOrder(id) {
        window.location.href = `/admin/orders/${id}`;
      }

      function editOrder(id) {
        window.location.href = `/admin/orders/edit/${id}`;
      }

      function deleteOrder(id) {
        Swal.fire({
          title: "Are you sure?",
          text: "This order will be permanently deleted.",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#dc3545",
          cancelButtonColor: "#6c757d",
          confirmButtonText: "Yes, delete it!"
        }).then((result) => {
          if (result.isConfirmed) {
            fetch(`/admin/orders/${id}`, { method: "DELETE" })
              .then(res => res.json())
              .then(data => {
                if (data.success) {
                  Swal.fire("Deleted!", "The order has been removed.", "success").then(() => {
                    location.reload();
                  });
                } else {
                  Swal.fire("Error!", data.message || "Failed to delete order.", "error");
                }
              });
          }
        });
      }
    </script>